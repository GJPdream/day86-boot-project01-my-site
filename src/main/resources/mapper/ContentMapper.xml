<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.itcast.dao.ContentDao">
    <sql id="BASE_TABLE">
      t_contents
    </sql>

    <!-- 用户表 -->
    <sql id="TABLE_USER">
        <include refid="cn.luischen.dao.UserDao.BASE_TABLE"/>
    </sql>

    <!-- 文章的基本列 -->
    <sql id="BASE_COLUMN">
        c.cid, c.title, c.titlePic, c.slug, c.created, c.modified, c.content, c.authorId,
        c.type, c.status, c.tags, c.categories, c.hits, c.commentsNum, c.allowComment,
        c.allowPing, c.allowFeed
    </sql>

    <!-- 关联查询的用户表需要的字段 -->
    <sql id="REL_USER_COLUMN">
        u.username,
    </sql>

    <!--添加文章
    使用的是主键吗？是
   useGeneratedKeys="true" keyProperty="cid"
   这这两个就是回显的，就是你在数据库库中只要有就可以直接回显到封装到domain里面。
    -->
    <insert id="addArticle" parameterType="cn.itcast.model.ContentDomain" useGeneratedKeys="true" keyProperty="cid">
        INSERT INTO
        <include refid="BASE_TABLE"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            title, titlePic, slug, created, content, authorId,
            type, status, tags, categories, hits, commentsNum, allowComment,
            allowPing, allowFeed,
        </trim>
        <trim prefix="VALUES(" suffix=")" suffixOverrides=",">
            #{title, jdbcType=VARCHAR}, #{titlePic, jdbcType=VARCHAR}, #{slug, jdbcType=VARCHAR}, UNIX_TIMESTAMP(NOW()),
            #{content, jdbcType=LONGVARCHAR}, #{authorId, jdbcType=INTEGER},
            #{type, jdbcType=VARCHAR}, #{status, jdbcType=VARCHAR}, #{tags, jdbcType=VARCHAR},
            #{categories, jdbcType=VARCHAR}, #{hits, jdbcType=INTEGER}, #{commentsNum, jdbcType=INTEGER},
            #{allowComment, jdbcType=INTEGER}, #{allowPing, jdbcType=INTEGER}, #{allowFeed, jdbcType=INTEGER},
        </trim>
    </insert>

   <!-- 根据条件查询文章-->
    <select id="getArticlesByCond" parameterType="cn.itcast.dto.cond.ContentCond" resultType="cn.itcast.model.ContentDomain">
        select
        <include refid="BASE_COLUMN"/>
        from
        <include refid="BASE_TABLE"/> AS c
         <where>
             <if test="tag!=null">
                 AND c.tags like CONCAT('%',#{tag ，jdbcType=VARCHAR},'%')
             </if>
             <if test="category != null">
                 AND c.categories LIKE CONCAT('%',#{category, jdbcType=VARCHAR},'%')
             </if>
             <if test="status != null">
                 AND c.status = #{status, jdbcType=VARCHAR}
             </if>
             <if test="title != null">
                 AND c.title LIKE CONCAT('%',#{title, jdbcType=VARCHAR},'%')
             </if>
             <if test="content != null">
                 AND c.content LIKE CONCAT('%',#{content, jdbcType=VARCHAR},'%')
             </if>
             <if test="type != null">
                 AND c.type = #{type, jdbcType=VARCHAR}
             </if>
             <if test="startTime != null">
                 AND c.created &gt;= #{startTime, jdbcType=INTEGER}
             </if>
             <if test="endTime != null">
                 AND c.created &lt;= #{endTime, jdbcType=INTEGER}
             </if>
         </where>
        ORDER BY c.created DESC
    </select>

    <!--通过条件进行查询操作-->
    <select id="getArticlesById" parameterType="integer" resultType="cn.itcast.model.ContentDomain">
    select
    <include refid="BASE_COLUMN"/>
    from
    <include refid="BASE_TABLE"/> AS c
     <where>
        c.cid=#{cid,jdbcType=INTEGER}
     </where>
    </select>

    <!--更新文章-->
    <update id="updateArticleById" parameterType="cn.itcast.model.ContentDomain">
        update
        <include refid="BASE_TABLE"/>
        <set>
            <if test="title != null">
                title = #{title, jdbcType=VARCHAR},
            </if>
            <if test="titlePic != null">
                titlePic = #{titlePic, jdbcType=VARCHAR},
            </if>
            <if test="slug != null">
                slug = #{slug, jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content, jdbcType=LONGVARCHAR},
            </if>
            modified = UNIX_TIMESTAMP(NOW()),
            <if test="type != null">
                type = #{type, jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status, jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                tags = #{tags, jdbcType=VARCHAR},
            </if>
            <if test="categories != null">
                categories = #{categories, jdbcType=VARCHAR},
            </if>
            <if test="hits != null">
                hits = #{hits, jdbcType=INTEGER},
            </if>
            <if test="commentsNum != null">
                commentsNum = #{commentsNum, jdbcType=INTEGER},
            </if>
            <if test="allowComment != null">
                allowComment = #{allowComment, jdbcType=INTEGER},
            </if>
            <if test="allowPing != null">
                allowPing = #{allowPing, jdbcType=INTEGER},
            </if>
            <if test="allowFeed != null">
                allowFeed = #{allowFeed, jdbcType=INTEGER},
            </if>
        </set>
        where cid=#{cid,jdbcType=INTEGER}
    </update>

    <!--删除文章-->
    <delete id="deleteArticleById" parameterType="Integer">
        delete from
        <include refid="BASE_TABLE"/>
        WHERE
        cid=#{cid,jdbcType=INTEGER}
    </delete>

    <!-- 根据主键编号获取文章信息 -->
    <select id="getArticleById" resultType="cn.itcast.model.ContentDomain">
        SELECT
        <include refid="BASE_COLUMN"/>
        FROM
        <include refid="BASE_TABLE"/> AS c
        WHERE c.cid = #{cid, jdbcType=INTEGER}
    </select>

</mapper>